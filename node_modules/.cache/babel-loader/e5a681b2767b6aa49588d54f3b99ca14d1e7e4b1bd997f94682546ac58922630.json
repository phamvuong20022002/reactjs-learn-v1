{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.resizeNearestNeighborGradConfig = {\n  kernelName: tfjs_1.ResizeNearestNeighborGrad,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      images = _a.images,\n      dy = _a.dy;\n    var backend = args.backend;\n    var alignCorners = args.attrs.alignCorners;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', images.dtype), {\n      name: 'align_corners',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: alignCorners\n    }];\n    var _b = images.shape,\n      origHeight = _b[1],\n      origWidth = _b[2];\n    var sizeTensor = tfjs_1.tensor1d([origHeight, origWidth], 'int32');\n    var res = backend.executeSingleOutput(tfjs_1.ResizeNearestNeighborGrad, opAttrs, [dy, sizeTensor]);\n    sizeTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","resizeNearestNeighborGradConfig","kernelName","ResizeNearestNeighborGrad","backendName","kernelFunc","args","_a","inputs","images","dy","backend","alignCorners","attrs","opAttrs","createTensorsTypeOpAttr","dtype","name","type","binding","TF_ATTR_BOOL","_b","shape","origHeight","origWidth","sizeTensor","tensor1d","res","executeSingleOutput","dispose"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/ResizeNearestNeighborGrad.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.resizeNearestNeighborGradConfig = {\n    kernelName: tfjs_1.ResizeNearestNeighborGrad,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, images = _a.images, dy = _a.dy;\n        var backend = args.backend;\n        var alignCorners = args.attrs.alignCorners;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', images.dtype), {\n                name: 'align_corners',\n                type: backend.binding.TF_ATTR_BOOL,\n                value: alignCorners\n            }\n        ];\n        var _b = images.shape, origHeight = _b[1], origWidth = _b[2];\n        var sizeTensor = tfjs_1.tensor1d([origHeight, origWidth], 'int32');\n        var res = backend.executeSingleOutput(tfjs_1.ResizeNearestNeighborGrad, opAttrs, [dy, sizeTensor]);\n        sizeTensor.dispose();\n        return res;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,+BAA+B,GAAG;EACtCC,UAAU,EAAEJ,MAAM,CAACK,yBAAyB;EAC5CC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,EAAE,GAAGD,IAAI,CAACE,MAAM;MAAEC,MAAM,GAAGF,EAAE,CAACE,MAAM;MAAEC,EAAE,GAAGH,EAAE,CAACG,EAAE;IACpD,IAAIC,OAAO,GAAGL,IAAI,CAACK,OAAO;IAC1B,IAAIC,YAAY,GAAGN,IAAI,CAACO,KAAK,CAACD,YAAY;IAC1C,IAAIE,OAAO,GAAG,CACVd,uBAAuB,CAACe,uBAAuB,CAAC,GAAG,EAAEN,MAAM,CAACO,KAAK,CAAC,EAAE;MAChEC,IAAI,EAAE,eAAe;MACrBC,IAAI,EAAEP,OAAO,CAACQ,OAAO,CAACC,YAAY;MAClCvB,KAAK,EAAEe;IACX,CAAC,CACJ;IACD,IAAIS,EAAE,GAAGZ,MAAM,CAACa,KAAK;MAAEC,UAAU,GAAGF,EAAE,CAAC,CAAC,CAAC;MAAEG,SAAS,GAAGH,EAAE,CAAC,CAAC,CAAC;IAC5D,IAAII,UAAU,GAAG3B,MAAM,CAAC4B,QAAQ,CAAC,CAACH,UAAU,EAAEC,SAAS,CAAC,EAAE,OAAO,CAAC;IAClE,IAAIG,GAAG,GAAGhB,OAAO,CAACiB,mBAAmB,CAAC9B,MAAM,CAACK,yBAAyB,EAAEW,OAAO,EAAE,CAACJ,EAAE,EAAEe,UAAU,CAAC,CAAC;IAClGA,UAAU,CAACI,OAAO,CAAC,CAAC;IACpB,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}