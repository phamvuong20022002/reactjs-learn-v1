{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.depthwiseConv2dNativeBackpropInputConfig = {\n  kernelName: tfjs_1.DepthwiseConv2dNativeBackpropInput,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      dy = _a.dy,\n      filter = _a.filter;\n    var backend = args.backend;\n    var _b = args.attrs,\n      strides = _b.strides,\n      dilations = _b.dilations,\n      pad = _b.pad,\n      dimRoundingMode = _b.dimRoundingMode,\n      inputShape = _b.inputShape;\n    var convInfo = tfjs_1.backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    return depthwiseConv2dNativeBackpropInputImpl(dy, filter, convInfo, backend);\n  }\n};\nfunction depthwiseConv2dNativeBackpropInputImpl(dy, filter, convInfo, backend) {\n  var strides = [1, convInfo.strideHeight, convInfo.strideWidth, 1];\n  var padding = convInfo.padInfo.type;\n  var dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NHWC' : 'NCHW';\n  var dilations = [1, convInfo.dilationHeight, convInfo.dilationWidth, 1];\n  var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', 'float32'), {\n    name: 'strides',\n    type: backend.binding.TF_ATTR_INT,\n    value: strides\n  }, {\n    name: 'padding',\n    type: backend.binding.TF_ATTR_STRING,\n    value: padding\n  }, {\n    name: 'data_format',\n    type: backend.binding.TF_ATTR_STRING,\n    value: dataFormat\n  }, {\n    name: 'dilations',\n    type: backend.binding.TF_ATTR_INT,\n    value: dilations\n  }];\n  var inputSizes = tfjs_1.tensor1d(convInfo.inShape, 'int32');\n  var res = backend.executeSingleOutput(tfjs_1.DepthwiseConv2dNativeBackpropInput, opAttrs, [inputSizes, filter, dy]);\n  inputSizes.dispose();\n  return res;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","depthwiseConv2dNativeBackpropInputConfig","kernelName","DepthwiseConv2dNativeBackpropInput","backendName","kernelFunc","args","_a","inputs","dy","filter","backend","_b","attrs","strides","dilations","pad","dimRoundingMode","inputShape","convInfo","backend_util","computeConv2DInfo","shape","depthwiseConv2dNativeBackpropInputImpl","strideHeight","strideWidth","padding","padInfo","type","dataFormat","dilationHeight","dilationWidth","opAttrs","createTensorsTypeOpAttr","name","binding","TF_ATTR_INT","TF_ATTR_STRING","inputSizes","tensor1d","inShape","res","executeSingleOutput","dispose"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/DepthwiseConv2dNativeBackpropInput.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.depthwiseConv2dNativeBackpropInputConfig = {\n    kernelName: tfjs_1.DepthwiseConv2dNativeBackpropInput,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, dy = _a.dy, filter = _a.filter;\n        var backend = args.backend;\n        var _b = args.attrs, strides = _b.strides, dilations = _b.dilations, pad = _b.pad, dimRoundingMode = _b.dimRoundingMode, inputShape = _b.inputShape;\n        var convInfo = tfjs_1.backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n        return depthwiseConv2dNativeBackpropInputImpl(dy, filter, convInfo, backend);\n    }\n};\nfunction depthwiseConv2dNativeBackpropInputImpl(dy, filter, convInfo, backend) {\n    var strides = [1, convInfo.strideHeight, convInfo.strideWidth, 1];\n    var padding = convInfo.padInfo.type;\n    var dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NHWC' : 'NCHW';\n    var dilations = [1, convInfo.dilationHeight, convInfo.dilationWidth, 1];\n    var opAttrs = [\n        nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', 'float32'),\n        { name: 'strides', type: backend.binding.TF_ATTR_INT, value: strides },\n        { name: 'padding', type: backend.binding.TF_ATTR_STRING, value: padding }, {\n            name: 'data_format',\n            type: backend.binding.TF_ATTR_STRING,\n            value: dataFormat\n        },\n        { name: 'dilations', type: backend.binding.TF_ATTR_INT, value: dilations }\n    ];\n    var inputSizes = tfjs_1.tensor1d(convInfo.inShape, 'int32');\n    var res = backend.executeSingleOutput(tfjs_1.DepthwiseConv2dNativeBackpropInput, opAttrs, [inputSizes, filter, dy]);\n    inputSizes.dispose();\n    return res;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}