{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.concatConfig = {\n  kernelName: tfjs_1.Concat,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var tensors = args.inputs;\n    var backend = args.backend;\n    var axis = args.attrs.axis;\n    var opAttrs = [{\n      name: 'N',\n      type: backend.binding.TF_ATTR_INT,\n      value: tensors.length\n    }, {\n      name: 'Tidx',\n      type: backend.binding.TF_ATTR_TYPE,\n      value: backend.binding.TF_INT32\n    }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tensors)];\n    var inputs = Array.from(tensors);\n    var axisTensor = tfjs_1.scalar(axis, 'int32');\n    inputs.push(axisTensor);\n    var res = backend.executeSingleOutput('ConcatV2', opAttrs, inputs);\n    axisTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","concatConfig","kernelName","Concat","backendName","kernelFunc","args","tensors","inputs","backend","axis","attrs","opAttrs","name","type","binding","TF_ATTR_INT","length","TF_ATTR_TYPE","TF_INT32","createTensorsTypeOpAttr","Array","from","axisTensor","scalar","push","res","executeSingleOutput","dispose"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/Concat.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.concatConfig = {\n    kernelName: tfjs_1.Concat,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var tensors = args.inputs;\n        var backend = args.backend;\n        var axis = args.attrs.axis;\n        var opAttrs = [\n            { name: 'N', type: backend.binding.TF_ATTR_INT, value: tensors.length }, {\n                name: 'Tidx',\n                type: backend.binding.TF_ATTR_TYPE,\n                value: backend.binding.TF_INT32\n            },\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tensors)\n        ];\n        var inputs = Array.from(tensors);\n        var axisTensor = tfjs_1.scalar(axis, 'int32');\n        inputs.push(axisTensor);\n        var res = backend.executeSingleOutput('ConcatV2', opAttrs, inputs);\n        axisTensor.dispose();\n        return res;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,YAAY,GAAG;EACnBC,UAAU,EAAEJ,MAAM,CAACK,MAAM;EACzBC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,OAAO,GAAGD,IAAI,CAACE,MAAM;IACzB,IAAIC,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACD,IAAI;IAC1B,IAAIE,OAAO,GAAG,CACV;MAAEC,IAAI,EAAE,GAAG;MAAEC,IAAI,EAAEL,OAAO,CAACM,OAAO,CAACC,WAAW;MAAEnB,KAAK,EAAEU,OAAO,CAACU;IAAO,CAAC,EAAE;MACrEJ,IAAI,EAAE,MAAM;MACZC,IAAI,EAAEL,OAAO,CAACM,OAAO,CAACG,YAAY;MAClCrB,KAAK,EAAEY,OAAO,CAACM,OAAO,CAACI;IAC3B,CAAC,EACDnB,uBAAuB,CAACoB,uBAAuB,CAAC,GAAG,EAAEb,OAAO,CAAC,CAChE;IACD,IAAIC,MAAM,GAAGa,KAAK,CAACC,IAAI,CAACf,OAAO,CAAC;IAChC,IAAIgB,UAAU,GAAGzB,MAAM,CAAC0B,MAAM,CAACd,IAAI,EAAE,OAAO,CAAC;IAC7CF,MAAM,CAACiB,IAAI,CAACF,UAAU,CAAC;IACvB,IAAIG,GAAG,GAAGjB,OAAO,CAACkB,mBAAmB,CAAC,UAAU,EAAEf,OAAO,EAAEJ,MAAM,CAAC;IAClEe,UAAU,CAACK,OAAO,CAAC,CAAC;IACpB,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}