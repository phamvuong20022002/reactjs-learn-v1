{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.stepConfig = {\n  kernelName: tfjs_1.Step,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var alpha = args.attrs.alpha;\n    var dtype = x.dtype;\n    return tfjs_1.tidy(function () {\n      var nans = tfjs_1.isNaN(x);\n      var stepNoNans = tfjs_1.where(tfjs_1.greater(x, tfjs_1.scalar(0, dtype)), tfjs_1.ones(x.shape), tfjs_1.fill(x.shape, alpha, dtype));\n      var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tfjs_1.backend_util.upcastType(x.dtype, stepNoNans.dtype))];\n      return backend.executeSingleOutput('Select', opAttrs, [nans, x, stepNoNans]);\n    });\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","stepConfig","kernelName","Step","backendName","kernelFunc","args","x","inputs","backend","alpha","attrs","dtype","tidy","nans","isNaN","stepNoNans","where","greater","scalar","ones","shape","fill","opAttrs","createTensorsTypeOpAttr","backend_util","upcastType","executeSingleOutput"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/Step.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.stepConfig = {\n    kernelName: tfjs_1.Step,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var alpha = args.attrs.alpha;\n        var dtype = x.dtype;\n        return tfjs_1.tidy(function () {\n            var nans = tfjs_1.isNaN(x);\n            var stepNoNans = tfjs_1.where(tfjs_1.greater(x, tfjs_1.scalar(0, dtype)), tfjs_1.ones(x.shape), tfjs_1.fill(x.shape, alpha, dtype));\n            var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', tfjs_1.backend_util.upcastType(x.dtype, stepNoNans.dtype))];\n            return backend.executeSingleOutput('Select', opAttrs, [nans, x, stepNoNans]);\n        });\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,UAAU,GAAG;EACjBC,UAAU,EAAEJ,MAAM,CAACK,IAAI;EACvBC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAACD,CAAC;IACrB,IAAIE,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAK,CAACD,KAAK;IAC5B,IAAIE,KAAK,GAAGL,CAAC,CAACK,KAAK;IACnB,OAAOd,MAAM,CAACe,IAAI,CAAC,YAAY;MAC3B,IAAIC,IAAI,GAAGhB,MAAM,CAACiB,KAAK,CAACR,CAAC,CAAC;MAC1B,IAAIS,UAAU,GAAGlB,MAAM,CAACmB,KAAK,CAACnB,MAAM,CAACoB,OAAO,CAACX,CAAC,EAAET,MAAM,CAACqB,MAAM,CAAC,CAAC,EAAEP,KAAK,CAAC,CAAC,EAAEd,MAAM,CAACsB,IAAI,CAACb,CAAC,CAACc,KAAK,CAAC,EAAEvB,MAAM,CAACwB,IAAI,CAACf,CAAC,CAACc,KAAK,EAAEX,KAAK,EAAEE,KAAK,CAAC,CAAC;MACnI,IAAIW,OAAO,GAAG,CAACvB,uBAAuB,CAACwB,uBAAuB,CAAC,GAAG,EAAE1B,MAAM,CAAC2B,YAAY,CAACC,UAAU,CAACnB,CAAC,CAACK,KAAK,EAAEI,UAAU,CAACJ,KAAK,CAAC,CAAC,CAAC;MAC/H,OAAOH,OAAO,CAACkB,mBAAmB,CAAC,QAAQ,EAAEJ,OAAO,EAAE,CAACT,IAAI,EAAEP,CAAC,EAAES,UAAU,CAAC,CAAC;IAChF,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}