{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tf = require(\"@tensorflow/tfjs\");\nvar fs = require(\"fs\");\nvar path_1 = require(\"path\");\nvar util_1 = require(\"util\");\nvar io_utils_1 = require(\"./io_utils\");\nvar stat = util_1.promisify(fs.stat);\nvar writeFile = util_1.promisify(fs.writeFile);\nvar readFile = util_1.promisify(fs.readFile);\nvar mkdir = util_1.promisify(fs.mkdir);\nfunction doesNotExistHandler(name) {\n  return function (e) {\n    switch (e.code) {\n      case 'ENOENT':\n        throw new Error(name + \" \" + e.path + \" does not exist: loading failed\");\n      default:\n        throw e;\n    }\n  };\n}\nvar NodeFileSystem = /** @class */function () {\n  /**\n   * Constructor of the NodeFileSystem IOHandler.\n   * @param path A single path or an Array of paths.\n   *   For saving: expects a single path pointing to an existing or nonexistent\n   *     directory. If the directory does not exist, it will be\n   *     created.\n   *   For loading:\n   *     - If the model has JSON topology (e.g., `tf.Model`), a single path\n   *       pointing to the JSON file (usually named `model.json`) is expected.\n   *       The JSON file is expected to contain `modelTopology` and/or\n   *       `weightsManifest`. If `weightManifest` exists, the values of the\n   *       weights will be loaded from relative paths (relative to the directory\n   *       of `model.json`) as contained in `weightManifest`.\n   *     - If the model has binary (protocol buffer GraphDef) topology,\n   *       an Array of two paths is expected: the first path should point to the\n   *       .pb file and the second path should point to the weight manifest\n   *       JSON file.\n   */\n  function NodeFileSystem(path) {\n    this.MODEL_JSON_FILENAME = 'model.json';\n    this.WEIGHTS_BINARY_FILENAME = 'weights.bin';\n    this.MODEL_BINARY_FILENAME = 'tensorflowjs.pb';\n    if (Array.isArray(path)) {\n      tf.util.assert(path.length === 2, function () {\n        return 'file paths must have a length of 2, ' + (\"(actual length is \" + path.length + \").\");\n      });\n      this.path = path.map(function (p) {\n        return path_1.resolve(p);\n      });\n    } else {\n      this.path = path_1.resolve(path);\n    }\n  }\n  NodeFileSystem.prototype.save = function (modelArtifacts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var weightsBinPath, weightsManifest, modelJSON, modelJSONPath;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (Array.isArray(this.path)) {\n              throw new Error('Cannot perform saving to multiple paths.');\n            }\n            return [4 /*yield*/, this.createOrVerifyDirectory()];\n          case 1:\n            _a.sent();\n            if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) return [3 /*break*/, 2];\n            throw new Error('NodeFileSystem.save() does not support saving model topology ' + 'in binary format yet.');\n          case 2:\n            weightsBinPath = path_1.join(this.path, this.WEIGHTS_BINARY_FILENAME);\n            weightsManifest = [{\n              paths: [this.WEIGHTS_BINARY_FILENAME],\n              weights: modelArtifacts.weightSpecs\n            }];\n            modelJSON = {\n              modelTopology: modelArtifacts.modelTopology,\n              weightsManifest: weightsManifest,\n              format: modelArtifacts.format,\n              generatedBy: modelArtifacts.generatedBy,\n              convertedBy: modelArtifacts.convertedBy\n            };\n            if (modelArtifacts.trainingConfig != null) {\n              modelJSON.trainingConfig = modelArtifacts.trainingConfig;\n            }\n            if (modelArtifacts.signature != null) {\n              modelJSON.signature = modelArtifacts.signature;\n            }\n            if (modelArtifacts.userDefinedMetadata != null) {\n              modelJSON.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n            }\n            modelJSONPath = path_1.join(this.path, this.MODEL_JSON_FILENAME);\n            return [4 /*yield*/, writeFile(modelJSONPath, JSON.stringify(modelJSON), 'utf8')];\n          case 3:\n            _a.sent();\n            return [4 /*yield*/, writeFile(weightsBinPath, Buffer.from(modelArtifacts.weightData), 'binary')];\n          case 4:\n            _a.sent();\n            return [2 /*return*/, {\n              // TODO(cais): Use explicit tf.io.ModelArtifactsInfo type below once it\n              // is available.\n              // tslint:disable-next-line:no-any\n              modelArtifactsInfo: io_utils_1.getModelArtifactsInfoForJSON(modelArtifacts)\n            }];\n        }\n      });\n    });\n  };\n  NodeFileSystem.prototype.load = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, Array.isArray(this.path) ? this.loadBinaryModel() : this.loadJSONModel()];\n      });\n    });\n  };\n  NodeFileSystem.prototype.loadBinaryModel = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var topologyPath, weightManifestPath, topology, weightManifest, modelTopology, weightsManifest, _a, _b, modelArtifacts, _c, weightSpecs, weightData;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            topologyPath = this.path[0];\n            weightManifestPath = this.path[1];\n            return [4 /*yield*/, stat(topologyPath).catch(doesNotExistHandler('Topology Path'))];\n          case 1:\n            topology = _d.sent();\n            return [4 /*yield*/, stat(weightManifestPath).catch(doesNotExistHandler('Weight Manifest Path'))];\n          case 2:\n            weightManifest = _d.sent();\n            // `this.path` can be either a directory or a file. If it is a file, assume\n            // it is model.json file.\n            if (!topology.isFile()) {\n              throw new Error('File specified for topology is not a file!');\n            }\n            if (!weightManifest.isFile()) {\n              throw new Error('File specified for the weight manifest is not a file!');\n            }\n            return [4 /*yield*/, readFile(this.path[0])];\n          case 3:\n            modelTopology = _d.sent();\n            _b = (_a = JSON).parse;\n            return [4 /*yield*/, readFile(this.path[1], 'utf8')];\n          case 4:\n            weightsManifest = _b.apply(_a, [_d.sent()]);\n            modelArtifacts = {\n              modelTopology: modelTopology\n            };\n            return [4 /*yield*/, this.loadWeights(weightsManifest, this.path[1])];\n          case 5:\n            _c = _d.sent(), weightSpecs = _c[0], weightData = _c[1];\n            modelArtifacts.weightSpecs = weightSpecs;\n            modelArtifacts.weightData = weightData;\n            return [2 /*return*/, modelArtifacts];\n        }\n      });\n    });\n  };\n  NodeFileSystem.prototype.loadJSONModel = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, info, modelJSON, _a, _b;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            path = this.path;\n            return [4 /*yield*/, stat(path).catch(doesNotExistHandler('Path'))];\n          case 1:\n            info = _c.sent();\n            if (!info.isFile()) return [3 /*break*/, 3];\n            _b = (_a = JSON).parse;\n            return [4 /*yield*/, readFile(path, 'utf8')];\n          case 2:\n            modelJSON = _b.apply(_a, [_c.sent()]);\n            return [2 /*return*/, tf.io.getModelArtifactsForJSON(modelJSON, function (weightsManifest) {\n              return _this.loadWeights(weightsManifest, path);\n            })];\n          case 3:\n            throw new Error('The path to load from must be a file. Loading from a directory ' + 'is not supported.');\n        }\n      });\n    });\n  };\n  NodeFileSystem.prototype.loadWeights = function (weightsManifest, path) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dirName, buffers, weightSpecs, _i, weightsManifest_1, group, _a, _b, path_2, weightFilePath, buffer;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            dirName = path_1.dirname(path);\n            buffers = [];\n            weightSpecs = [];\n            _i = 0, weightsManifest_1 = weightsManifest;\n            _c.label = 1;\n          case 1:\n            if (!(_i < weightsManifest_1.length)) return [3 /*break*/, 7];\n            group = weightsManifest_1[_i];\n            _a = 0, _b = group.paths;\n            _c.label = 2;\n          case 2:\n            if (!(_a < _b.length)) return [3 /*break*/, 5];\n            path_2 = _b[_a];\n            weightFilePath = path_1.join(dirName, path_2);\n            return [4 /*yield*/, readFile(weightFilePath).catch(doesNotExistHandler('Weight file'))];\n          case 3:\n            buffer = _c.sent();\n            buffers.push(buffer);\n            _c.label = 4;\n          case 4:\n            _a++;\n            return [3 /*break*/, 2];\n          case 5:\n            weightSpecs.push.apply(weightSpecs, group.weights);\n            _c.label = 6;\n          case 6:\n            _i++;\n            return [3 /*break*/, 1];\n          case 7:\n            return [2 /*return*/, [weightSpecs, io_utils_1.toArrayBuffer(buffers)]];\n        }\n      });\n    });\n  };\n  /**\n   * For each item in `this.path`, creates a directory at the path or verify\n   * that the path exists as a directory.\n   */\n  NodeFileSystem.prototype.createOrVerifyDirectory = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var paths, _i, paths_1, path, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            paths = Array.isArray(this.path) ? this.path : [this.path];\n            _i = 0, paths_1 = paths;\n            _a.label = 1;\n          case 1:\n            if (!(_i < paths_1.length)) return [3 /*break*/, 9];\n            path = paths_1[_i];\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 8]);\n            return [4 /*yield*/, mkdir(path)];\n          case 3:\n            _a.sent();\n            return [3 /*break*/, 8];\n          case 4:\n            e_1 = _a.sent();\n            if (!(e_1.code === 'EEXIST')) return [3 /*break*/, 6];\n            return [4 /*yield*/, stat(path)];\n          case 5:\n            if (_a.sent().isFile()) {\n              throw new Error(\"Path \" + path + \" exists as a file. The path must be \" + \"nonexistent or point to a directory.\");\n            }\n            return [3 /*break*/, 7];\n          case 6:\n            throw e_1;\n          case 7:\n            return [3 /*break*/, 8];\n          case 8:\n            _i++;\n            return [3 /*break*/, 1];\n          case 9:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  NodeFileSystem.URL_SCHEME = 'file://';\n  return NodeFileSystem;\n}();\nexports.NodeFileSystem = NodeFileSystem;\nexports.nodeFileSystemRouter = function (url) {\n  if (Array.isArray(url)) {\n    if (url.every(function (urlElement) {\n      return urlElement.startsWith(NodeFileSystem.URL_SCHEME);\n    })) {\n      return new NodeFileSystem(url.map(function (urlElement) {\n        return urlElement.slice(NodeFileSystem.URL_SCHEME.length);\n      }));\n    } else {\n      return null;\n    }\n  } else {\n    if (url.startsWith(NodeFileSystem.URL_SCHEME)) {\n      return new NodeFileSystem(url.slice(NodeFileSystem.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\n// Registration of `nodeFileSystemRouter` is done in index.ts.\n/**\n * Factory function for Node.js native file system IO Handler.\n *\n * @param path A single path or an Array of paths.\n *   For saving: expects a single path pointing to an existing or nonexistent\n *     directory. If the directory does not exist, it will be\n *     created.\n *   For loading:\n *     - If the model has JSON topology (e.g., `tf.Model`), a single path\n *       pointing to the JSON file (usually named `model.json`) is expected.\n *       The JSON file is expected to contain `modelTopology` and/or\n *       `weightsManifest`. If `weightManifest` exists, the values of the\n *       weights will be loaded from relative paths (relative to the directory\n *       of `model.json`) as contained in `weightManifest`.\n *     - If the model has binary (protocol buffer GraphDef) topology,\n *       an Array of two paths is expected: the first path should point to the\n *        .pb file and the second path should point to the weight manifest\n *       JSON file.\n */\nfunction fileSystem(path) {\n  return new NodeFileSystem(path);\n}\nexports.fileSystem = fileSystem;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","tf","require","fs","path_1","util_1","io_utils_1","stat","promisify","writeFile","readFile","mkdir","doesNotExistHandler","name","code","Error","path","NodeFileSystem","MODEL_JSON_FILENAME","WEIGHTS_BINARY_FILENAME","MODEL_BINARY_FILENAME","Array","isArray","util","assert","map","p","prototype","save","modelArtifacts","weightsBinPath","weightsManifest","modelJSON","modelJSONPath","_a","createOrVerifyDirectory","modelTopology","ArrayBuffer","join","paths","weights","weightSpecs","format","generatedBy","convertedBy","trainingConfig","signature","userDefinedMetadata","JSON","stringify","Buffer","from","weightData","modelArtifactsInfo","getModelArtifactsInfoForJSON","load","loadBinaryModel","loadJSONModel","topologyPath","weightManifestPath","topology","weightManifest","_b","_c","_d","catch","isFile","parse","loadWeights","info","_this","io","getModelArtifactsForJSON","dirName","buffers","_i","weightsManifest_1","group","path_2","weightFilePath","buffer","dirname","toArrayBuffer","paths_1","e_1","URL_SCHEME","nodeFileSystemRouter","url","every","urlElement","startsWith","slice","fileSystem"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/io/file_system.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tf = require(\"@tensorflow/tfjs\");\nvar fs = require(\"fs\");\nvar path_1 = require(\"path\");\nvar util_1 = require(\"util\");\nvar io_utils_1 = require(\"./io_utils\");\nvar stat = util_1.promisify(fs.stat);\nvar writeFile = util_1.promisify(fs.writeFile);\nvar readFile = util_1.promisify(fs.readFile);\nvar mkdir = util_1.promisify(fs.mkdir);\nfunction doesNotExistHandler(name) {\n    return function (e) {\n        switch (e.code) {\n            case 'ENOENT':\n                throw new Error(name + \" \" + e.path + \" does not exist: loading failed\");\n            default:\n                throw e;\n        }\n    };\n}\nvar NodeFileSystem = /** @class */ (function () {\n    /**\n     * Constructor of the NodeFileSystem IOHandler.\n     * @param path A single path or an Array of paths.\n     *   For saving: expects a single path pointing to an existing or nonexistent\n     *     directory. If the directory does not exist, it will be\n     *     created.\n     *   For loading:\n     *     - If the model has JSON topology (e.g., `tf.Model`), a single path\n     *       pointing to the JSON file (usually named `model.json`) is expected.\n     *       The JSON file is expected to contain `modelTopology` and/or\n     *       `weightsManifest`. If `weightManifest` exists, the values of the\n     *       weights will be loaded from relative paths (relative to the directory\n     *       of `model.json`) as contained in `weightManifest`.\n     *     - If the model has binary (protocol buffer GraphDef) topology,\n     *       an Array of two paths is expected: the first path should point to the\n     *       .pb file and the second path should point to the weight manifest\n     *       JSON file.\n     */\n    function NodeFileSystem(path) {\n        this.MODEL_JSON_FILENAME = 'model.json';\n        this.WEIGHTS_BINARY_FILENAME = 'weights.bin';\n        this.MODEL_BINARY_FILENAME = 'tensorflowjs.pb';\n        if (Array.isArray(path)) {\n            tf.util.assert(path.length === 2, function () { return 'file paths must have a length of 2, ' +\n                (\"(actual length is \" + path.length + \").\"); });\n            this.path = path.map(function (p) { return path_1.resolve(p); });\n        }\n        else {\n            this.path = path_1.resolve(path);\n        }\n    }\n    NodeFileSystem.prototype.save = function (modelArtifacts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var weightsBinPath, weightsManifest, modelJSON, modelJSONPath;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (Array.isArray(this.path)) {\n                            throw new Error('Cannot perform saving to multiple paths.');\n                        }\n                        return [4 /*yield*/, this.createOrVerifyDirectory()];\n                    case 1:\n                        _a.sent();\n                        if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) return [3 /*break*/, 2];\n                        throw new Error('NodeFileSystem.save() does not support saving model topology ' +\n                            'in binary format yet.');\n                    case 2:\n                        weightsBinPath = path_1.join(this.path, this.WEIGHTS_BINARY_FILENAME);\n                        weightsManifest = [{\n                                paths: [this.WEIGHTS_BINARY_FILENAME],\n                                weights: modelArtifacts.weightSpecs\n                            }];\n                        modelJSON = {\n                            modelTopology: modelArtifacts.modelTopology,\n                            weightsManifest: weightsManifest,\n                            format: modelArtifacts.format,\n                            generatedBy: modelArtifacts.generatedBy,\n                            convertedBy: modelArtifacts.convertedBy\n                        };\n                        if (modelArtifacts.trainingConfig != null) {\n                            modelJSON.trainingConfig = modelArtifacts.trainingConfig;\n                        }\n                        if (modelArtifacts.signature != null) {\n                            modelJSON.signature = modelArtifacts.signature;\n                        }\n                        if (modelArtifacts.userDefinedMetadata != null) {\n                            modelJSON.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n                        }\n                        modelJSONPath = path_1.join(this.path, this.MODEL_JSON_FILENAME);\n                        return [4 /*yield*/, writeFile(modelJSONPath, JSON.stringify(modelJSON), 'utf8')];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, writeFile(weightsBinPath, Buffer.from(modelArtifacts.weightData), 'binary')];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/, {\n                                // TODO(cais): Use explicit tf.io.ModelArtifactsInfo type below once it\n                                // is available.\n                                // tslint:disable-next-line:no-any\n                                modelArtifactsInfo: io_utils_1.getModelArtifactsInfoForJSON(modelArtifacts)\n                            }];\n                }\n            });\n        });\n    };\n    NodeFileSystem.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Array.isArray(this.path) ? this.loadBinaryModel() :\n                        this.loadJSONModel()];\n            });\n        });\n    };\n    NodeFileSystem.prototype.loadBinaryModel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var topologyPath, weightManifestPath, topology, weightManifest, modelTopology, weightsManifest, _a, _b, modelArtifacts, _c, weightSpecs, weightData;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        topologyPath = this.path[0];\n                        weightManifestPath = this.path[1];\n                        return [4 /*yield*/, stat(topologyPath).catch(doesNotExistHandler('Topology Path'))];\n                    case 1:\n                        topology = _d.sent();\n                        return [4 /*yield*/, stat(weightManifestPath)\n                                .catch(doesNotExistHandler('Weight Manifest Path'))];\n                    case 2:\n                        weightManifest = _d.sent();\n                        // `this.path` can be either a directory or a file. If it is a file, assume\n                        // it is model.json file.\n                        if (!topology.isFile()) {\n                            throw new Error('File specified for topology is not a file!');\n                        }\n                        if (!weightManifest.isFile()) {\n                            throw new Error('File specified for the weight manifest is not a file!');\n                        }\n                        return [4 /*yield*/, readFile(this.path[0])];\n                    case 3:\n                        modelTopology = _d.sent();\n                        _b = (_a = JSON).parse;\n                        return [4 /*yield*/, readFile(this.path[1], 'utf8')];\n                    case 4:\n                        weightsManifest = _b.apply(_a, [_d.sent()]);\n                        modelArtifacts = {\n                            modelTopology: modelTopology,\n                        };\n                        return [4 /*yield*/, this.loadWeights(weightsManifest, this.path[1])];\n                    case 5:\n                        _c = _d.sent(), weightSpecs = _c[0], weightData = _c[1];\n                        modelArtifacts.weightSpecs = weightSpecs;\n                        modelArtifacts.weightData = weightData;\n                        return [2 /*return*/, modelArtifacts];\n                }\n            });\n        });\n    };\n    NodeFileSystem.prototype.loadJSONModel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, info, modelJSON, _a, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        path = this.path;\n                        return [4 /*yield*/, stat(path).catch(doesNotExistHandler('Path'))];\n                    case 1:\n                        info = _c.sent();\n                        if (!info.isFile()) return [3 /*break*/, 3];\n                        _b = (_a = JSON).parse;\n                        return [4 /*yield*/, readFile(path, 'utf8')];\n                    case 2:\n                        modelJSON = _b.apply(_a, [_c.sent()]);\n                        return [2 /*return*/, tf.io.getModelArtifactsForJSON(modelJSON, function (weightsManifest) { return _this.loadWeights(weightsManifest, path); })];\n                    case 3: throw new Error('The path to load from must be a file. Loading from a directory ' +\n                        'is not supported.');\n                }\n            });\n        });\n    };\n    NodeFileSystem.prototype.loadWeights = function (weightsManifest, path) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dirName, buffers, weightSpecs, _i, weightsManifest_1, group, _a, _b, path_2, weightFilePath, buffer;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        dirName = path_1.dirname(path);\n                        buffers = [];\n                        weightSpecs = [];\n                        _i = 0, weightsManifest_1 = weightsManifest;\n                        _c.label = 1;\n                    case 1:\n                        if (!(_i < weightsManifest_1.length)) return [3 /*break*/, 7];\n                        group = weightsManifest_1[_i];\n                        _a = 0, _b = group.paths;\n                        _c.label = 2;\n                    case 2:\n                        if (!(_a < _b.length)) return [3 /*break*/, 5];\n                        path_2 = _b[_a];\n                        weightFilePath = path_1.join(dirName, path_2);\n                        return [4 /*yield*/, readFile(weightFilePath)\n                                .catch(doesNotExistHandler('Weight file'))];\n                    case 3:\n                        buffer = _c.sent();\n                        buffers.push(buffer);\n                        _c.label = 4;\n                    case 4:\n                        _a++;\n                        return [3 /*break*/, 2];\n                    case 5:\n                        weightSpecs.push.apply(weightSpecs, group.weights);\n                        _c.label = 6;\n                    case 6:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 7: return [2 /*return*/, [weightSpecs, io_utils_1.toArrayBuffer(buffers)]];\n                }\n            });\n        });\n    };\n    /**\n     * For each item in `this.path`, creates a directory at the path or verify\n     * that the path exists as a directory.\n     */\n    NodeFileSystem.prototype.createOrVerifyDirectory = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var paths, _i, paths_1, path, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        paths = Array.isArray(this.path) ? this.path : [this.path];\n                        _i = 0, paths_1 = paths;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < paths_1.length)) return [3 /*break*/, 9];\n                        path = paths_1[_i];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 8]);\n                        return [4 /*yield*/, mkdir(path)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 8];\n                    case 4:\n                        e_1 = _a.sent();\n                        if (!(e_1.code === 'EEXIST')) return [3 /*break*/, 6];\n                        return [4 /*yield*/, stat(path)];\n                    case 5:\n                        if ((_a.sent()).isFile()) {\n                            throw new Error(\"Path \" + path + \" exists as a file. The path must be \" +\n                                \"nonexistent or point to a directory.\");\n                        }\n                        return [3 /*break*/, 7];\n                    case 6: throw e_1;\n                    case 7: return [3 /*break*/, 8];\n                    case 8:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    NodeFileSystem.URL_SCHEME = 'file://';\n    return NodeFileSystem;\n}());\nexports.NodeFileSystem = NodeFileSystem;\nexports.nodeFileSystemRouter = function (url) {\n    if (Array.isArray(url)) {\n        if (url.every(function (urlElement) { return urlElement.startsWith(NodeFileSystem.URL_SCHEME); })) {\n            return new NodeFileSystem(url.map(function (urlElement) { return urlElement.slice(NodeFileSystem.URL_SCHEME.length); }));\n        }\n        else {\n            return null;\n        }\n    }\n    else {\n        if (url.startsWith(NodeFileSystem.URL_SCHEME)) {\n            return new NodeFileSystem(url.slice(NodeFileSystem.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\n// Registration of `nodeFileSystemRouter` is done in index.ts.\n/**\n * Factory function for Node.js native file system IO Handler.\n *\n * @param path A single path or an Array of paths.\n *   For saving: expects a single path pointing to an existing or nonexistent\n *     directory. If the directory does not exist, it will be\n *     created.\n *   For loading:\n *     - If the model has JSON topology (e.g., `tf.Model`), a single path\n *       pointing to the JSON file (usually named `model.json`) is expected.\n *       The JSON file is expected to contain `modelTopology` and/or\n *       `weightsManifest`. If `weightManifest` exists, the values of the\n *       weights will be loaded from relative paths (relative to the directory\n *       of `model.json`) as contained in `weightManifest`.\n *     - If the model has binary (protocol buffer GraphDef) topology,\n *       an Array of two paths is expected: the first path should point to the\n *        .pb file and the second path should point to the weight manifest\n *       JSON file.\n */\nfunction fileSystem(path) {\n    return new NodeFileSystem(path);\n}\nexports.fileSystem = fileSystem;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}