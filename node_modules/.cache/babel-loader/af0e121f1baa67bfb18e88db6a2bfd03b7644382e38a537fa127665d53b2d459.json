{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nexports._fusedMatMulConfig = {\n  kernelName: tfjs_1._FusedMatMul,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      a = _a.a,\n      b = _a.b,\n      bias = _a.bias,\n      preluActivationWeights = _a.preluActivationWeights;\n    var backend = args.backend;\n    var _b = args.attrs,\n      transposeA = _b.transposeA,\n      transposeB = _b.transposeB,\n      activation = _b.activation,\n      leakyreluAlpha = _b.leakyreluAlpha;\n    // Core TensorFlow does not have a fused BatchMatMul op. Combine calls to\n    // achieve the same results:\n    return tfjs_1.tidy(function () {\n      var result = tfjs_1.matMul(a, b, transposeA, transposeB);\n      if (bias != null) {\n        result = tfjs_1.add(result, bias);\n      }\n      result = backend.applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n      return result;\n    });\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","_fusedMatMulConfig","kernelName","_FusedMatMul","backendName","kernelFunc","args","_a","inputs","a","b","bias","preluActivationWeights","backend","_b","attrs","transposeA","transposeB","activation","leakyreluAlpha","tidy","result","matMul","add","applyActivation"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/_FusedMatMul.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nexports._fusedMatMulConfig = {\n    kernelName: tfjs_1._FusedMatMul,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, a = _a.a, b = _a.b, bias = _a.bias, preluActivationWeights = _a.preluActivationWeights;\n        var backend = args.backend;\n        var _b = args.attrs, transposeA = _b.transposeA, transposeB = _b.transposeB, activation = _b.activation, leakyreluAlpha = _b.leakyreluAlpha;\n        // Core TensorFlow does not have a fused BatchMatMul op. Combine calls to\n        // achieve the same results:\n        return tfjs_1.tidy(function () {\n            var result = tfjs_1.matMul(a, b, transposeA, transposeB);\n            if (bias != null) {\n                result = tfjs_1.add(result, bias);\n            }\n            result = backend.applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n            return result;\n        });\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxCH,OAAO,CAACI,kBAAkB,GAAG;EACzBC,UAAU,EAAEH,MAAM,CAACI,YAAY;EAC/BC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,EAAE,GAAGD,IAAI,CAACE,MAAM;MAAEC,CAAC,GAAGF,EAAE,CAACE,CAAC;MAAEC,CAAC,GAAGH,EAAE,CAACG,CAAC;MAAEC,IAAI,GAAGJ,EAAE,CAACI,IAAI;MAAEC,sBAAsB,GAAGL,EAAE,CAACK,sBAAsB;IAC5G,IAAIC,OAAO,GAAGP,IAAI,CAACO,OAAO;IAC1B,IAAIC,EAAE,GAAGR,IAAI,CAACS,KAAK;MAAEC,UAAU,GAAGF,EAAE,CAACE,UAAU;MAAEC,UAAU,GAAGH,EAAE,CAACG,UAAU;MAAEC,UAAU,GAAGJ,EAAE,CAACI,UAAU;MAAEC,cAAc,GAAGL,EAAE,CAACK,cAAc;IAC3I;IACA;IACA,OAAOpB,MAAM,CAACqB,IAAI,CAAC,YAAY;MAC3B,IAAIC,MAAM,GAAGtB,MAAM,CAACuB,MAAM,CAACb,CAAC,EAAEC,CAAC,EAAEM,UAAU,EAAEC,UAAU,CAAC;MACxD,IAAIN,IAAI,IAAI,IAAI,EAAE;QACdU,MAAM,GAAGtB,MAAM,CAACwB,GAAG,CAACF,MAAM,EAAEV,IAAI,CAAC;MACrC;MACAU,MAAM,GAAGR,OAAO,CAACW,eAAe,CAACH,MAAM,EAAEH,UAAU,EAAEN,sBAAsB,EAAEO,cAAc,CAAC;MAC5F,OAAOE,MAAM;IACjB,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}