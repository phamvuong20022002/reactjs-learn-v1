{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n// tslint:disable-next-line: variable-name\nexports.LRNConfig = {\n  kernelName: tfjs_1.LRN,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n      depthRadius = _a.depthRadius,\n      bias = _a.bias,\n      alpha = _a.alpha,\n      beta = _a.beta;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), {\n      name: 'depth_radius',\n      type: backend.binding.TF_ATTR_INT,\n      value: depthRadius\n    }, {\n      name: 'bias',\n      type: backend.binding.TF_ATTR_FLOAT,\n      value: bias\n    }, {\n      name: 'alpha',\n      type: backend.binding.TF_ATTR_FLOAT,\n      value: alpha\n    }, {\n      name: 'beta',\n      type: backend.binding.TF_ATTR_FLOAT,\n      value: beta\n    }];\n    return backend.executeSingleOutput(tfjs_1.LRN, opAttrs, [x]);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","LRNConfig","kernelName","LRN","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","depthRadius","bias","alpha","beta","opAttrs","createTensorsTypeOpAttr","dtype","name","type","binding","TF_ATTR_INT","TF_ATTR_FLOAT","executeSingleOutput"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/LRN.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n// tslint:disable-next-line: variable-name\nexports.LRNConfig = {\n    kernelName: tfjs_1.LRN,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, depthRadius = _a.depthRadius, bias = _a.bias, alpha = _a.alpha, beta = _a.beta;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            {\n                name: 'depth_radius',\n                type: backend.binding.TF_ATTR_INT,\n                value: depthRadius\n            },\n            { name: 'bias', type: backend.binding.TF_ATTR_FLOAT, value: bias },\n            { name: 'alpha', type: backend.binding.TF_ATTR_FLOAT, value: alpha },\n            { name: 'beta', type: backend.binding.TF_ATTR_FLOAT, value: beta },\n        ];\n        return backend.executeSingleOutput(tfjs_1.LRN, opAttrs, [x]);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjE;AACAH,OAAO,CAACK,SAAS,GAAG;EAChBC,UAAU,EAAEJ,MAAM,CAACK,GAAG;EACtBC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAACD,CAAC;IACrB,IAAIE,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAK;MAAEC,WAAW,GAAGF,EAAE,CAACE,WAAW;MAAEC,IAAI,GAAGH,EAAE,CAACG,IAAI;MAAEC,KAAK,GAAGJ,EAAE,CAACI,KAAK;MAAEC,IAAI,GAAGL,EAAE,CAACK,IAAI;IACnG,IAAIC,OAAO,GAAG,CACVhB,uBAAuB,CAACiB,uBAAuB,CAAC,GAAG,EAAEV,CAAC,CAACW,KAAK,CAAC,EAC7D;MACIC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAEX,OAAO,CAACY,OAAO,CAACC,WAAW;MACjCzB,KAAK,EAAEe;IACX,CAAC,EACD;MAAEO,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEX,OAAO,CAACY,OAAO,CAACE,aAAa;MAAE1B,KAAK,EAAEgB;IAAK,CAAC,EAClE;MAAEM,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAEX,OAAO,CAACY,OAAO,CAACE,aAAa;MAAE1B,KAAK,EAAEiB;IAAM,CAAC,EACpE;MAAEK,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEX,OAAO,CAACY,OAAO,CAACE,aAAa;MAAE1B,KAAK,EAAEkB;IAAK,CAAC,CACrE;IACD,OAAON,OAAO,CAACe,mBAAmB,CAAC1B,MAAM,CAACK,GAAG,EAAEa,OAAO,EAAE,CAACT,CAAC,CAAC,CAAC;EAChE;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}