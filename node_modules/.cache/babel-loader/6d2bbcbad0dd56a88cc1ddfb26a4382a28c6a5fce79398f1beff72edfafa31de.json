{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.cumprodConfig = {\n  kernelName: tfjs_1.Cumprod,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n      axis = _a.axis,\n      exclusive = _a.exclusive,\n      reverse = _a.reverse;\n    var axisTensor = tfjs_1.scalar(axis, 'int32');\n    var opAttrs = [{\n      name: 'exclusive',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: exclusive\n    }, {\n      name: 'reverse',\n      type: backend.binding.TF_ATTR_BOOL,\n      value: reverse\n    }, nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32')];\n    var res = backend.executeSingleOutput(tfjs_1.Cumprod, opAttrs, [x, axisTensor]);\n    axisTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","cumprodConfig","kernelName","Cumprod","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","axis","exclusive","reverse","axisTensor","scalar","opAttrs","name","type","binding","TF_ATTR_BOOL","createTensorsTypeOpAttr","dtype","res","executeSingleOutput","dispose"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/Cumprod.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.cumprodConfig = {\n    kernelName: tfjs_1.Cumprod,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, axis = _a.axis, exclusive = _a.exclusive, reverse = _a.reverse;\n        var axisTensor = tfjs_1.scalar(axis, 'int32');\n        var opAttrs = [\n            { name: 'exclusive', type: backend.binding.TF_ATTR_BOOL, value: exclusive },\n            { name: 'reverse', type: backend.binding.TF_ATTR_BOOL, value: reverse },\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32')\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.Cumprod, opAttrs, [x, axisTensor]);\n        axisTensor.dispose();\n        return res;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,aAAa,GAAG;EACpBC,UAAU,EAAEJ,MAAM,CAACK,OAAO;EAC1BC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAACD,CAAC;IACrB,IAAIE,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAK;MAAEC,IAAI,GAAGF,EAAE,CAACE,IAAI;MAAEC,SAAS,GAAGH,EAAE,CAACG,SAAS;MAAEC,OAAO,GAAGJ,EAAE,CAACI,OAAO;IACnF,IAAIC,UAAU,GAAGjB,MAAM,CAACkB,MAAM,CAACJ,IAAI,EAAE,OAAO,CAAC;IAC7C,IAAIK,OAAO,GAAG,CACV;MAAEC,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAEV,OAAO,CAACW,OAAO,CAACC,YAAY;MAAExB,KAAK,EAAEgB;IAAU,CAAC,EAC3E;MAAEK,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAEV,OAAO,CAACW,OAAO,CAACC,YAAY;MAAExB,KAAK,EAAEiB;IAAQ,CAAC,EACvEd,uBAAuB,CAACsB,uBAAuB,CAAC,GAAG,EAAEf,CAAC,CAACgB,KAAK,CAAC,EAC7DvB,uBAAuB,CAACsB,uBAAuB,CAAC,MAAM,EAAE,OAAO,CAAC,CACnE;IACD,IAAIE,GAAG,GAAGf,OAAO,CAACgB,mBAAmB,CAAC3B,MAAM,CAACK,OAAO,EAAEc,OAAO,EAAE,CAACV,CAAC,EAAEQ,UAAU,CAAC,CAAC;IAC/EA,UAAU,CAACW,OAAO,CAAC,CAAC;IACpB,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}