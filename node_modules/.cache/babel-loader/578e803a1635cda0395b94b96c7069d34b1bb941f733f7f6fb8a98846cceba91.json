{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n/**\n * Factory function for HTTP IO Handler in Node.js.\n *\n * @param path URL path or an array of them.\n * @param requestInit Request init for the HTTP IOHandler. May include fields\n *   such as \"credentials\" and \"cache\". (Optional)\n * @param weightPathPrefix A path prefix for weight loading . (Optional).\n */\nfunction nodeHTTPRequest(path, requestInit, weightPathPrefix) {\n  return tfjs_1.io.browserHTTPRequest(path, {\n    requestInit: requestInit,\n    weightPathPrefix: weightPathPrefix\n  });\n}\nexports.nodeHTTPRequest = nodeHTTPRequest;\nexports.nodeHTTPRequestRouter = function (url) {\n  var isHTTP = true;\n  if (Array.isArray(url)) {\n    isHTTP = url.every(function (urlItem) {\n      return tfjs_1.io.isHTTPScheme(urlItem);\n    });\n  } else {\n    isHTTP = tfjs_1.io.isHTTPScheme(url);\n  }\n  if (isHTTP) {\n    return nodeHTTPRequest(url);\n  }\n  return null;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodeHTTPRequest","path","requestInit","weightPathPrefix","io","browserHTTPRequest","nodeHTTPRequestRouter","url","isHTTP","Array","isArray","every","urlItem","isHTTPScheme"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/io/node_http.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n/**\n * Factory function for HTTP IO Handler in Node.js.\n *\n * @param path URL path or an array of them.\n * @param requestInit Request init for the HTTP IOHandler. May include fields\n *   such as \"credentials\" and \"cache\". (Optional)\n * @param weightPathPrefix A path prefix for weight loading . (Optional).\n */\nfunction nodeHTTPRequest(path, requestInit, weightPathPrefix) {\n    return tfjs_1.io.browserHTTPRequest(path, { requestInit: requestInit, weightPathPrefix: weightPathPrefix });\n}\nexports.nodeHTTPRequest = nodeHTTPRequest;\nexports.nodeHTTPRequestRouter = function (url) {\n    var isHTTP = true;\n    if (Array.isArray(url)) {\n        isHTTP = url.every(function (urlItem) { return tfjs_1.io.isHTTPScheme(urlItem); });\n    }\n    else {\n        isHTTP = tfjs_1.io.isHTTPScheme(url);\n    }\n    if (isHTTP) {\n        return nodeHTTPRequest(url);\n    }\n    return null;\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,IAAI,EAAEC,WAAW,EAAEC,gBAAgB,EAAE;EAC1D,OAAOL,MAAM,CAACM,EAAE,CAACC,kBAAkB,CAACJ,IAAI,EAAE;IAAEC,WAAW,EAAEA,WAAW;IAAEC,gBAAgB,EAAEA;EAAiB,CAAC,CAAC;AAC/G;AACAP,OAAO,CAACI,eAAe,GAAGA,eAAe;AACzCJ,OAAO,CAACU,qBAAqB,GAAG,UAAUC,GAAG,EAAE;EAC3C,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAIC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,EAAE;IACpBC,MAAM,GAAGD,GAAG,CAACI,KAAK,CAAC,UAAUC,OAAO,EAAE;MAAE,OAAOd,MAAM,CAACM,EAAE,CAACS,YAAY,CAACD,OAAO,CAAC;IAAE,CAAC,CAAC;EACtF,CAAC,MACI;IACDJ,MAAM,GAAGV,MAAM,CAACM,EAAE,CAACS,YAAY,CAACN,GAAG,CAAC;EACxC;EACA,IAAIC,MAAM,EAAE;IACR,OAAOR,eAAe,CAACO,GAAG,CAAC;EAC/B;EACA,OAAO,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}