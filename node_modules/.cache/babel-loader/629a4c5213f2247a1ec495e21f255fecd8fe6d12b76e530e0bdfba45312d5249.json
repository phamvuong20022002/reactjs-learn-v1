{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.conv2DBackpropInputConfig = {\n  kernelName: tfjs_1.Conv2DBackpropInput,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      dy = _a.dy,\n      filter = _a.filter;\n    var backend = args.backend;\n    var _b = args.attrs,\n      strides = _b.strides,\n      pad = _b.pad,\n      dataFormat = _b.dataFormat,\n      dimRoundingMode = _b.dimRoundingMode,\n      inputShape = _b.inputShape;\n    var $dataFormat = tfjs_1.backend_util.convertConv2DDataFormat(dataFormat);\n    var convInfo = tfjs_1.backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n    return conv2DBackpropInputImpl(dy, filter, convInfo, backend);\n  }\n};\nfunction conv2DBackpropInputImpl(dy, filter, convInfo, backend) {\n  if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n    throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" + (\"while padding was \" + convInfo.padInfo.type));\n  }\n  var strides = [1, convInfo.strideHeight, convInfo.strideWidth, 1];\n  var padding = convInfo.padInfo.type;\n  var dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NHWC' : 'NCHW';\n  var dilations = [1, convInfo.dilationHeight, convInfo.dilationWidth, 1];\n  var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', 'float32'), {\n    name: 'strides',\n    type: backend.binding.TF_ATTR_INT,\n    value: strides\n  }, {\n    name: 'padding',\n    type: backend.binding.TF_ATTR_STRING,\n    value: padding\n  }, {\n    name: 'data_format',\n    type: backend.binding.TF_ATTR_STRING,\n    value: dataFormat\n  }, {\n    name: 'use_cudnn_on_gpu',\n    type: backend.binding.TF_ATTR_BOOL,\n    value: true\n  }, {\n    name: 'dilations',\n    type: backend.binding.TF_ATTR_INT,\n    value: dilations\n  }];\n  var inputSizes = tfjs_1.tensor1d(convInfo.inShape, 'int32');\n  var res = backend.executeSingleOutput(tfjs_1.Conv2DBackpropInput, opAttrs, [inputSizes, filter, dy]);\n  inputSizes.dispose();\n  return res;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","conv2DBackpropInputConfig","kernelName","Conv2DBackpropInput","backendName","kernelFunc","args","_a","inputs","dy","filter","backend","_b","attrs","strides","pad","dataFormat","dimRoundingMode","inputShape","$dataFormat","backend_util","convertConv2DDataFormat","convInfo","computeConv2DInfo","shape","conv2DBackpropInputImpl","padInfo","type","Error","strideHeight","strideWidth","padding","dilations","dilationHeight","dilationWidth","opAttrs","createTensorsTypeOpAttr","name","binding","TF_ATTR_INT","TF_ATTR_STRING","TF_ATTR_BOOL","inputSizes","tensor1d","inShape","res","executeSingleOutput","dispose"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/Conv2DBackpropInput.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.conv2DBackpropInputConfig = {\n    kernelName: tfjs_1.Conv2DBackpropInput,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, dy = _a.dy, filter = _a.filter;\n        var backend = args.backend;\n        var _b = args.attrs, strides = _b.strides, pad = _b.pad, dataFormat = _b.dataFormat, dimRoundingMode = _b.dimRoundingMode, inputShape = _b.inputShape;\n        var $dataFormat = tfjs_1.backend_util.convertConv2DDataFormat(dataFormat);\n        var convInfo = tfjs_1.backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n        return conv2DBackpropInputImpl(dy, filter, convInfo, backend);\n    }\n};\nfunction conv2DBackpropInputImpl(dy, filter, convInfo, backend) {\n    if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n        throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" +\n            (\"while padding was \" + convInfo.padInfo.type));\n    }\n    var strides = [1, convInfo.strideHeight, convInfo.strideWidth, 1];\n    var padding = convInfo.padInfo.type;\n    var dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NHWC' : 'NCHW';\n    var dilations = [1, convInfo.dilationHeight, convInfo.dilationWidth, 1];\n    var opAttrs = [\n        nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', 'float32'),\n        { name: 'strides', type: backend.binding.TF_ATTR_INT, value: strides },\n        { name: 'padding', type: backend.binding.TF_ATTR_STRING, value: padding }, {\n            name: 'data_format',\n            type: backend.binding.TF_ATTR_STRING,\n            value: dataFormat\n        },\n        { name: 'use_cudnn_on_gpu', type: backend.binding.TF_ATTR_BOOL, value: true },\n        { name: 'dilations', type: backend.binding.TF_ATTR_INT, value: dilations }\n    ];\n    var inputSizes = tfjs_1.tensor1d(convInfo.inShape, 'int32');\n    var res = backend.executeSingleOutput(tfjs_1.Conv2DBackpropInput, opAttrs, [inputSizes, filter, dy]);\n    inputSizes.dispose();\n    return res;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}