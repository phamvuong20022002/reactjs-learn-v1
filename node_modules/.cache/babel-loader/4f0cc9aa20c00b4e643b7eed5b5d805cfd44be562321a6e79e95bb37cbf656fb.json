{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.nonMaxSuppressionV3Config = {\n  kernelName: tfjs_1.NonMaxSuppressionV3,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      boxes = _a.boxes,\n      scores = _a.scores;\n    var backend = args.backend;\n    var _b = args.attrs,\n      maxOutputSize = _b.maxOutputSize,\n      iouThreshold = _b.iouThreshold,\n      scoreThreshold = _b.scoreThreshold;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', boxes.dtype)];\n    var maxOutputSizeTensor = tfjs_1.scalar(maxOutputSize, 'int32');\n    var iouThresholdTensor = tfjs_1.scalar(iouThreshold);\n    var scoreThresholdTensor = tfjs_1.scalar(scoreThreshold);\n    var res = backend.executeSingleOutput(tfjs_1.NonMaxSuppressionV3, opAttrs, [boxes, scores, maxOutputSizeTensor, iouThresholdTensor, scoreThresholdTensor]);\n    maxOutputSizeTensor.dispose();\n    iouThresholdTensor.dispose();\n    scoreThresholdTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","nonMaxSuppressionV3Config","kernelName","NonMaxSuppressionV3","backendName","kernelFunc","args","_a","inputs","boxes","scores","backend","_b","attrs","maxOutputSize","iouThreshold","scoreThreshold","opAttrs","createTensorsTypeOpAttr","dtype","maxOutputSizeTensor","scalar","iouThresholdTensor","scoreThresholdTensor","res","executeSingleOutput","dispose"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/NonMaxSuppressionV3.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.nonMaxSuppressionV3Config = {\n    kernelName: tfjs_1.NonMaxSuppressionV3,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, boxes = _a.boxes, scores = _a.scores;\n        var backend = args.backend;\n        var _b = args.attrs, maxOutputSize = _b.maxOutputSize, iouThreshold = _b.iouThreshold, scoreThreshold = _b.scoreThreshold;\n        var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', boxes.dtype)];\n        var maxOutputSizeTensor = tfjs_1.scalar(maxOutputSize, 'int32');\n        var iouThresholdTensor = tfjs_1.scalar(iouThreshold);\n        var scoreThresholdTensor = tfjs_1.scalar(scoreThreshold);\n        var res = backend.executeSingleOutput(tfjs_1.NonMaxSuppressionV3, opAttrs, [\n            boxes, scores, maxOutputSizeTensor, iouThresholdTensor,\n            scoreThresholdTensor\n        ]);\n        maxOutputSizeTensor.dispose();\n        iouThresholdTensor.dispose();\n        scoreThresholdTensor.dispose();\n        return res;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,yBAAyB,GAAG;EAChCC,UAAU,EAAEJ,MAAM,CAACK,mBAAmB;EACtCC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,EAAE,GAAGD,IAAI,CAACE,MAAM;MAAEC,KAAK,GAAGF,EAAE,CAACE,KAAK;MAAEC,MAAM,GAAGH,EAAE,CAACG,MAAM;IAC1D,IAAIC,OAAO,GAAGL,IAAI,CAACK,OAAO;IAC1B,IAAIC,EAAE,GAAGN,IAAI,CAACO,KAAK;MAAEC,aAAa,GAAGF,EAAE,CAACE,aAAa;MAAEC,YAAY,GAAGH,EAAE,CAACG,YAAY;MAAEC,cAAc,GAAGJ,EAAE,CAACI,cAAc;IACzH,IAAIC,OAAO,GAAG,CAACjB,uBAAuB,CAACkB,uBAAuB,CAAC,GAAG,EAAET,KAAK,CAACU,KAAK,CAAC,CAAC;IACjF,IAAIC,mBAAmB,GAAGtB,MAAM,CAACuB,MAAM,CAACP,aAAa,EAAE,OAAO,CAAC;IAC/D,IAAIQ,kBAAkB,GAAGxB,MAAM,CAACuB,MAAM,CAACN,YAAY,CAAC;IACpD,IAAIQ,oBAAoB,GAAGzB,MAAM,CAACuB,MAAM,CAACL,cAAc,CAAC;IACxD,IAAIQ,GAAG,GAAGb,OAAO,CAACc,mBAAmB,CAAC3B,MAAM,CAACK,mBAAmB,EAAEc,OAAO,EAAE,CACvER,KAAK,EAAEC,MAAM,EAAEU,mBAAmB,EAAEE,kBAAkB,EACtDC,oBAAoB,CACvB,CAAC;IACFH,mBAAmB,CAACM,OAAO,CAAC,CAAC;IAC7BJ,kBAAkB,CAACI,OAAO,CAAC,CAAC;IAC5BH,oBAAoB,CAACG,OAAO,CAAC,CAAC;IAC9B,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}