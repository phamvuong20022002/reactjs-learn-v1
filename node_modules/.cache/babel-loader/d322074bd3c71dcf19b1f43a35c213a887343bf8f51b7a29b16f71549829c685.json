{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.conv3DConfig = {\n  kernelName: tfjs_1.Conv3D,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      x = _a.x,\n      filter = _a.filter;\n    var backend = args.backend;\n    var _b = args.attrs,\n      strides = _b.strides,\n      pad = _b.pad,\n      dilations = _b.dilations;\n    var convInfo = tfjs_1.backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n    var $strides = [1, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, 1];\n    var padding = convInfo.padInfo.type;\n    var $dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NDHWC' : 'NCDHW';\n    if (!backend.isGPUPackage && convInfo.dilationDepth > 1) {\n      throw new Error('CPU Dilation depth must be 1');\n    }\n    var $dilations = [1, convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth, 1];\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), {\n      name: 'strides',\n      type: backend.binding.TF_ATTR_INT,\n      value: $strides\n    }, {\n      name: 'padding',\n      type: backend.binding.TF_ATTR_STRING,\n      value: padding\n    }, {\n      name: 'data_format',\n      type: backend.binding.TF_ATTR_STRING,\n      value: $dataFormat\n    }, {\n      name: 'dilations',\n      type: backend.binding.TF_ATTR_INT,\n      value: $dilations\n    }];\n    return backend.executeSingleOutput(tfjs_1.Conv3D, opAttrs, [x, filter]);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","conv3DConfig","kernelName","Conv3D","backendName","kernelFunc","args","_a","inputs","x","filter","backend","_b","attrs","strides","pad","dilations","convInfo","backend_util","computeConv3DInfo","shape","$strides","strideDepth","strideHeight","strideWidth","padding","padInfo","type","$dataFormat","dataFormat","isGPUPackage","dilationDepth","Error","$dilations","dilationHeight","dilationWidth","opAttrs","createTensorsTypeOpAttr","dtype","name","binding","TF_ATTR_INT","TF_ATTR_STRING","executeSingleOutput"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/Conv3D.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.conv3DConfig = {\n    kernelName: tfjs_1.Conv3D,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, x = _a.x, filter = _a.filter;\n        var backend = args.backend;\n        var _b = args.attrs, strides = _b.strides, pad = _b.pad, dilations = _b.dilations;\n        var convInfo = tfjs_1.backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n        var $strides = [\n            1, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, 1\n        ];\n        var padding = convInfo.padInfo.type;\n        var $dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NDHWC' : 'NCDHW';\n        if (!backend.isGPUPackage && convInfo.dilationDepth > 1) {\n            throw new Error('CPU Dilation depth must be 1');\n        }\n        var $dilations = [\n            1, convInfo.dilationDepth, convInfo.dilationHeight,\n            convInfo.dilationWidth, 1\n        ];\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            { name: 'strides', type: backend.binding.TF_ATTR_INT, value: $strides },\n            { name: 'padding', type: backend.binding.TF_ATTR_STRING, value: padding }, {\n                name: 'data_format',\n                type: backend.binding.TF_ATTR_STRING,\n                value: $dataFormat\n            },\n            { name: 'dilations', type: backend.binding.TF_ATTR_INT, value: $dilations }\n        ];\n        return backend.executeSingleOutput(tfjs_1.Conv3D, opAttrs, [x, filter]);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,YAAY,GAAG;EACnBC,UAAU,EAAEJ,MAAM,CAACK,MAAM;EACzBC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,EAAE,GAAGD,IAAI,CAACE,MAAM;MAAEC,CAAC,GAAGF,EAAE,CAACE,CAAC;MAAEC,MAAM,GAAGH,EAAE,CAACG,MAAM;IAClD,IAAIC,OAAO,GAAGL,IAAI,CAACK,OAAO;IAC1B,IAAIC,EAAE,GAAGN,IAAI,CAACO,KAAK;MAAEC,OAAO,GAAGF,EAAE,CAACE,OAAO;MAAEC,GAAG,GAAGH,EAAE,CAACG,GAAG;MAAEC,SAAS,GAAGJ,EAAE,CAACI,SAAS;IACjF,IAAIC,QAAQ,GAAGnB,MAAM,CAACoB,YAAY,CAACC,iBAAiB,CAACV,CAAC,CAACW,KAAK,EAAEV,MAAM,CAACU,KAAK,EAAEN,OAAO,EAAEE,SAAS,EAAED,GAAG,CAAC;IACpG,IAAIM,QAAQ,GAAG,CACX,CAAC,EAAEJ,QAAQ,CAACK,WAAW,EAAEL,QAAQ,CAACM,YAAY,EAAEN,QAAQ,CAACO,WAAW,EAAE,CAAC,CAC1E;IACD,IAAIC,OAAO,GAAGR,QAAQ,CAACS,OAAO,CAACC,IAAI;IACnC,IAAIC,WAAW,GAAGX,QAAQ,CAACY,UAAU,KAAK,cAAc,GAAG,OAAO,GAAG,OAAO;IAC5E,IAAI,CAAClB,OAAO,CAACmB,YAAY,IAAIb,QAAQ,CAACc,aAAa,GAAG,CAAC,EAAE;MACrD,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACnD;IACA,IAAIC,UAAU,GAAG,CACb,CAAC,EAAEhB,QAAQ,CAACc,aAAa,EAAEd,QAAQ,CAACiB,cAAc,EAClDjB,QAAQ,CAACkB,aAAa,EAAE,CAAC,CAC5B;IACD,IAAIC,OAAO,GAAG,CACVpC,uBAAuB,CAACqC,uBAAuB,CAAC,GAAG,EAAE5B,CAAC,CAAC6B,KAAK,CAAC,EAC7D;MAAEC,IAAI,EAAE,SAAS;MAAEZ,IAAI,EAAEhB,OAAO,CAAC6B,OAAO,CAACC,WAAW;MAAE5C,KAAK,EAAEwB;IAAS,CAAC,EACvE;MAAEkB,IAAI,EAAE,SAAS;MAAEZ,IAAI,EAAEhB,OAAO,CAAC6B,OAAO,CAACE,cAAc;MAAE7C,KAAK,EAAE4B;IAAQ,CAAC,EAAE;MACvEc,IAAI,EAAE,aAAa;MACnBZ,IAAI,EAAEhB,OAAO,CAAC6B,OAAO,CAACE,cAAc;MACpC7C,KAAK,EAAE+B;IACX,CAAC,EACD;MAAEW,IAAI,EAAE,WAAW;MAAEZ,IAAI,EAAEhB,OAAO,CAAC6B,OAAO,CAACC,WAAW;MAAE5C,KAAK,EAAEoC;IAAW,CAAC,CAC9E;IACD,OAAOtB,OAAO,CAACgC,mBAAmB,CAAC7C,MAAM,CAACK,MAAM,EAAEiC,OAAO,EAAE,CAAC3B,CAAC,EAAEC,MAAM,CAAC,CAAC;EAC3E;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}