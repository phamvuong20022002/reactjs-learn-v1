{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.depthToSpaceConfig = {\n  kernelName: tfjs_1.DepthToSpace,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n      blockSize = _a.blockSize,\n      dataFormat = _a.dataFormat;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x), {\n      name: 'block_size',\n      type: backend.binding.TF_ATTR_INT,\n      value: blockSize < 2 ? 2 : blockSize\n    }, {\n      name: 'data_format',\n      type: backend.binding.TF_ATTR_STRING,\n      value: dataFormat\n    }];\n    var inputs = [x];\n    return backend.executeSingleOutput(tfjs_1.DepthToSpace, opAttrs, inputs);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","depthToSpaceConfig","kernelName","DepthToSpace","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","blockSize","dataFormat","opAttrs","createTensorsTypeOpAttr","name","type","binding","TF_ATTR_INT","TF_ATTR_STRING","executeSingleOutput"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/DepthToSpace.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.depthToSpaceConfig = {\n    kernelName: tfjs_1.DepthToSpace,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, blockSize = _a.blockSize, dataFormat = _a.dataFormat;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x), {\n                name: 'block_size',\n                type: backend.binding.TF_ATTR_INT,\n                value: blockSize < 2 ? 2 : blockSize\n            },\n            {\n                name: 'data_format',\n                type: backend.binding.TF_ATTR_STRING,\n                value: dataFormat\n            }\n        ];\n        var inputs = [x];\n        return backend.executeSingleOutput(tfjs_1.DepthToSpace, opAttrs, inputs);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,kBAAkB,GAAG;EACzBC,UAAU,EAAEJ,MAAM,CAACK,YAAY;EAC/BC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAACD,CAAC;IACrB,IAAIE,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAK;MAAEC,SAAS,GAAGF,EAAE,CAACE,SAAS;MAAEC,UAAU,GAAGH,EAAE,CAACG,UAAU;IACzE,IAAIC,OAAO,GAAG,CACVd,uBAAuB,CAACe,uBAAuB,CAAC,GAAG,EAAER,CAAC,CAAC,EAAE;MACrDS,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAER,OAAO,CAACS,OAAO,CAACC,WAAW;MACjCtB,KAAK,EAAEe,SAAS,GAAG,CAAC,GAAG,CAAC,GAAGA;IAC/B,CAAC,EACD;MACII,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAER,OAAO,CAACS,OAAO,CAACE,cAAc;MACpCvB,KAAK,EAAEgB;IACX,CAAC,CACJ;IACD,IAAIL,MAAM,GAAG,CAACD,CAAC,CAAC;IAChB,OAAOE,OAAO,CAACY,mBAAmB,CAACvB,MAAM,CAACK,YAAY,EAAEW,OAAO,EAAEN,MAAM,CAAC;EAC5E;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}