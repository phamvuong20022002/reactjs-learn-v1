{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.maxPool3DConfig = {\n  kernelName: tfjs_1.MaxPool3D,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n      filterSize = _a.filterSize,\n      strides = _a.strides,\n      pad = _a.pad,\n      dataFormat = _a.dataFormat,\n      dimRoundingMode = _a.dimRoundingMode;\n    var convInfo = tfjs_1.backend_util.computePool3DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode, dataFormat);\n    if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n      throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" + (\"while padding was \" + convInfo.padInfo.type));\n    }\n    var ksize = [1, convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth, 1];\n    var $strides = [1, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, 1];\n    var padding = convInfo.padInfo.type;\n    var $dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NDHWC' : 'NCDHW';\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), {\n      name: 'ksize',\n      type: backend.binding.TF_ATTR_INT,\n      value: ksize\n    }, {\n      name: 'strides',\n      type: backend.binding.TF_ATTR_INT,\n      value: $strides\n    }, {\n      name: 'padding',\n      type: backend.binding.TF_ATTR_STRING,\n      value: padding\n    }, {\n      name: 'data_format',\n      type: backend.binding.TF_ATTR_STRING,\n      value: $dataFormat\n    }];\n    return backend.executeSingleOutput(tfjs_1.MaxPool3D, opAttrs, [x]);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","maxPool3DConfig","kernelName","MaxPool3D","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","filterSize","strides","pad","dataFormat","dimRoundingMode","convInfo","backend_util","computePool3DInfo","shape","padInfo","type","Error","ksize","filterDepth","filterHeight","filterWidth","$strides","strideDepth","strideHeight","strideWidth","padding","$dataFormat","opAttrs","createTensorsTypeOpAttr","dtype","name","binding","TF_ATTR_INT","TF_ATTR_STRING","executeSingleOutput"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/MaxPool3D.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.maxPool3DConfig = {\n    kernelName: tfjs_1.MaxPool3D,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, filterSize = _a.filterSize, strides = _a.strides, pad = _a.pad, dataFormat = _a.dataFormat, dimRoundingMode = _a.dimRoundingMode;\n        var convInfo = tfjs_1.backend_util.computePool3DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode, dataFormat);\n        if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n            throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" +\n                (\"while padding was \" + convInfo.padInfo.type));\n        }\n        var ksize = [\n            1, convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth, 1\n        ];\n        var $strides = [\n            1, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, 1\n        ];\n        var padding = convInfo.padInfo.type;\n        var $dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NDHWC' : 'NCDHW';\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            { name: 'ksize', type: backend.binding.TF_ATTR_INT, value: ksize },\n            { name: 'strides', type: backend.binding.TF_ATTR_INT, value: $strides },\n            { name: 'padding', type: backend.binding.TF_ATTR_STRING, value: padding }, {\n                name: 'data_format',\n                type: backend.binding.TF_ATTR_STRING,\n                value: $dataFormat\n            }\n        ];\n        return backend.executeSingleOutput(tfjs_1.MaxPool3D, opAttrs, [x]);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,eAAe,GAAG;EACtBC,UAAU,EAAEJ,MAAM,CAACK,SAAS;EAC5BC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAACD,CAAC;IACrB,IAAIE,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAK;MAAEC,UAAU,GAAGF,EAAE,CAACE,UAAU;MAAEC,OAAO,GAAGH,EAAE,CAACG,OAAO;MAAEC,GAAG,GAAGJ,EAAE,CAACI,GAAG;MAAEC,UAAU,GAAGL,EAAE,CAACK,UAAU;MAAEC,eAAe,GAAGN,EAAE,CAACM,eAAe;IACrJ,IAAIC,QAAQ,GAAGnB,MAAM,CAACoB,YAAY,CAACC,iBAAiB,CAACZ,CAAC,CAACa,KAAK,EAAER,UAAU,EAAEC,OAAO,EAAE,CAAC,CAAC,iBAAiBC,GAAG,EAAEE,eAAe,EAAED,UAAU,CAAC;IACvI,IAAIE,QAAQ,CAACI,OAAO,CAACC,IAAI,KAAK,OAAO,IAAIL,QAAQ,CAACI,OAAO,CAACC,IAAI,KAAK,MAAM,EAAE;MACvE,MAAM,IAAIC,KAAK,CAAC,sDAAsD,IACjE,oBAAoB,GAAGN,QAAQ,CAACI,OAAO,CAACC,IAAI,CAAC,CAAC;IACvD;IACA,IAAIE,KAAK,GAAG,CACR,CAAC,EAAEP,QAAQ,CAACQ,WAAW,EAAER,QAAQ,CAACS,YAAY,EAAET,QAAQ,CAACU,WAAW,EAAE,CAAC,CAC1E;IACD,IAAIC,QAAQ,GAAG,CACX,CAAC,EAAEX,QAAQ,CAACY,WAAW,EAAEZ,QAAQ,CAACa,YAAY,EAAEb,QAAQ,CAACc,WAAW,EAAE,CAAC,CAC1E;IACD,IAAIC,OAAO,GAAGf,QAAQ,CAACI,OAAO,CAACC,IAAI;IACnC,IAAIW,WAAW,GAAGhB,QAAQ,CAACF,UAAU,KAAK,cAAc,GAAG,OAAO,GAAG,OAAO;IAC5E,IAAImB,OAAO,GAAG,CACVlC,uBAAuB,CAACmC,uBAAuB,CAAC,GAAG,EAAE5B,CAAC,CAAC6B,KAAK,CAAC,EAC7D;MAAEC,IAAI,EAAE,OAAO;MAAEf,IAAI,EAAEb,OAAO,CAAC6B,OAAO,CAACC,WAAW;MAAE1C,KAAK,EAAE2B;IAAM,CAAC,EAClE;MAAEa,IAAI,EAAE,SAAS;MAAEf,IAAI,EAAEb,OAAO,CAAC6B,OAAO,CAACC,WAAW;MAAE1C,KAAK,EAAE+B;IAAS,CAAC,EACvE;MAAES,IAAI,EAAE,SAAS;MAAEf,IAAI,EAAEb,OAAO,CAAC6B,OAAO,CAACE,cAAc;MAAE3C,KAAK,EAAEmC;IAAQ,CAAC,EAAE;MACvEK,IAAI,EAAE,aAAa;MACnBf,IAAI,EAAEb,OAAO,CAAC6B,OAAO,CAACE,cAAc;MACpC3C,KAAK,EAAEoC;IACX,CAAC,CACJ;IACD,OAAOxB,OAAO,CAACgC,mBAAmB,CAAC3C,MAAM,CAACK,SAAS,EAAE+B,OAAO,EAAE,CAAC3B,CAAC,CAAC,CAAC;EACtE;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}