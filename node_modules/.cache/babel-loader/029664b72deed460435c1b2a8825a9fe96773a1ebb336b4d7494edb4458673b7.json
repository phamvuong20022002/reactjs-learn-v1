{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.padV2Config = {\n  kernelName: tfjs_1.PadV2,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n      paddings = _a.paddings,\n      constantValue = _a.constantValue;\n    // Bind tensor values\n    var paddingsTensor = tfjs_1.tensor2d(paddings, [paddings.length, 2], 'int32');\n    var constantTensor = tfjs_1.scalar(constantValue, x.dtype);\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tpaddings', paddingsTensor.dtype)];\n    var res = backend.executeSingleOutput(tfjs_1.PadV2, opAttrs, [x, paddingsTensor, constantTensor]);\n    paddingsTensor.dispose();\n    constantTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","padV2Config","kernelName","PadV2","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","paddings","constantValue","paddingsTensor","tensor2d","length","constantTensor","scalar","dtype","opAttrs","createTensorsTypeOpAttr","res","executeSingleOutput","dispose"],"sources":["C:/Users/ACER/node_modules/@tensorflow/tfjs-node/dist/kernels/PadV2.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.padV2Config = {\n    kernelName: tfjs_1.PadV2,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, paddings = _a.paddings, constantValue = _a.constantValue;\n        // Bind tensor values\n        var paddingsTensor = tfjs_1.tensor2d(paddings, [paddings.length, 2], 'int32');\n        var constantTensor = tfjs_1.scalar(constantValue, x.dtype);\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tpaddings', paddingsTensor.dtype)\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.PadV2, opAttrs, [x, paddingsTensor, constantTensor]);\n        paddingsTensor.dispose();\n        constantTensor.dispose();\n        return res;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEH,OAAO,CAACK,WAAW,GAAG;EAClBC,UAAU,EAAEJ,MAAM,CAACK,KAAK;EACxBC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACxB,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAACD,CAAC;IACrB,IAAIE,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAK;MAAEC,QAAQ,GAAGF,EAAE,CAACE,QAAQ;MAAEC,aAAa,GAAGH,EAAE,CAACG,aAAa;IAC7E;IACA,IAAIC,cAAc,GAAGhB,MAAM,CAACiB,QAAQ,CAACH,QAAQ,EAAE,CAACA,QAAQ,CAACI,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC;IAC7E,IAAIC,cAAc,GAAGnB,MAAM,CAACoB,MAAM,CAACL,aAAa,EAAEN,CAAC,CAACY,KAAK,CAAC;IAC1D,IAAIC,OAAO,GAAG,CACVpB,uBAAuB,CAACqB,uBAAuB,CAAC,GAAG,EAAEd,CAAC,CAACY,KAAK,CAAC,EAC7DnB,uBAAuB,CAACqB,uBAAuB,CAAC,WAAW,EAAEP,cAAc,CAACK,KAAK,CAAC,CACrF;IACD,IAAIG,GAAG,GAAGb,OAAO,CAACc,mBAAmB,CAACzB,MAAM,CAACK,KAAK,EAAEiB,OAAO,EAAE,CAACb,CAAC,EAAEO,cAAc,EAAEG,cAAc,CAAC,CAAC;IACjGH,cAAc,CAACU,OAAO,CAAC,CAAC;IACxBP,cAAc,CAACO,OAAO,CAAC,CAAC;IACxB,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}