{"ast":null,"code":"'use strict';\n\nmodule.exports = (mode, isDir, portable) => {\n  mode &= 0o7777;\n\n  // in portable mode, use the minimum reasonable umask\n  // if this system creates files with 0o664 by default\n  // (as some linux distros do), then we'll write the\n  // archive with 0o644 instead.  Also, don't ever create\n  // a file that is not readable/writable by the owner.\n  if (portable) mode = (mode | 0o600) & ~0o22;\n\n  // if dirs are readable, then they should be listable\n  if (isDir) {\n    if (mode & 0o400) mode |= 0o100;\n    if (mode & 0o40) mode |= 0o10;\n    if (mode & 0o4) mode |= 0o1;\n  }\n  return mode;\n};","map":{"version":3,"names":["module","exports","mode","isDir","portable"],"sources":["C:/Users/ACER/node_modules/@mapbox/node-pre-gyp/node_modules/tar/lib/mode-fix.js"],"sourcesContent":["'use strict'\nmodule.exports = (mode, isDir, portable) => {\n  mode &= 0o7777\n\n  // in portable mode, use the minimum reasonable umask\n  // if this system creates files with 0o664 by default\n  // (as some linux distros do), then we'll write the\n  // archive with 0o644 instead.  Also, don't ever create\n  // a file that is not readable/writable by the owner.\n  if (portable)\n    mode = (mode | 0o600) & ~0o22\n\n  // if dirs are readable, then they should be listable\n  if (isDir) {\n    if (mode & 0o400)\n      mode |= 0o100\n    if (mode & 0o40)\n      mode |= 0o10\n    if (mode & 0o4)\n      mode |= 0o1\n  }\n  return mode\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,OAAO,GAAG,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAC1CF,IAAI,IAAI,MAAM;;EAEd;EACA;EACA;EACA;EACA;EACA,IAAIE,QAAQ,EACVF,IAAI,GAAG,CAACA,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI;;EAE/B;EACA,IAAIC,KAAK,EAAE;IACT,IAAID,IAAI,GAAG,KAAK,EACdA,IAAI,IAAI,KAAK;IACf,IAAIA,IAAI,GAAG,IAAI,EACbA,IAAI,IAAI,IAAI;IACd,IAAIA,IAAI,GAAG,GAAG,EACZA,IAAI,IAAI,GAAG;EACf;EACA,OAAOA,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}