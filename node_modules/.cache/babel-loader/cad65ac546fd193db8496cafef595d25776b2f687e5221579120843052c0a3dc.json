{"ast":null,"code":"'use strict';\n\nvar platform = require('os').platform();\nvar spawnSync = require('child_process').spawnSync;\nvar readdirSync = require('fs').readdirSync;\nvar GLIBC = 'glibc';\nvar MUSL = 'musl';\nvar spawnOptions = {\n  encoding: 'utf8',\n  env: process.env\n};\nif (!spawnSync) {\n  spawnSync = function () {\n    return {\n      status: 126,\n      stdout: '',\n      stderr: ''\n    };\n  };\n}\nfunction contains(needle) {\n  return function (haystack) {\n    return haystack.indexOf(needle) !== -1;\n  };\n}\nfunction versionFromMuslLdd(out) {\n  return out.split(/[\\r\\n]+/)[1].trim().split(/\\s/)[1];\n}\nfunction safeReaddirSync(path) {\n  try {\n    return readdirSync(path);\n  } catch (e) {}\n  return [];\n}\nvar family = '';\nvar version = '';\nvar method = '';\nif (platform === 'linux') {\n  // Try getconf\n  var glibc = spawnSync('getconf', ['GNU_LIBC_VERSION'], spawnOptions);\n  if (glibc.status === 0) {\n    family = GLIBC;\n    version = glibc.stdout.trim().split(' ')[1];\n    method = 'getconf';\n  } else {\n    // Try ldd\n    var ldd = spawnSync('ldd', ['--version'], spawnOptions);\n    if (ldd.status === 0 && ldd.stdout.indexOf(MUSL) !== -1) {\n      family = MUSL;\n      version = versionFromMuslLdd(ldd.stdout);\n      method = 'ldd';\n    } else if (ldd.status === 1 && ldd.stderr.indexOf(MUSL) !== -1) {\n      family = MUSL;\n      version = versionFromMuslLdd(ldd.stderr);\n      method = 'ldd';\n    } else {\n      // Try filesystem (family only)\n      var lib = safeReaddirSync('/lib');\n      if (lib.some(contains('-linux-gnu'))) {\n        family = GLIBC;\n        method = 'filesystem';\n      } else if (lib.some(contains('libc.musl-'))) {\n        family = MUSL;\n        method = 'filesystem';\n      } else if (lib.some(contains('ld-musl-'))) {\n        family = MUSL;\n        method = 'filesystem';\n      } else {\n        var usrSbin = safeReaddirSync('/usr/sbin');\n        if (usrSbin.some(contains('glibc'))) {\n          family = GLIBC;\n          method = 'filesystem';\n        }\n      }\n    }\n  }\n}\nvar isNonGlibcLinux = family !== '' && family !== GLIBC;\nmodule.exports = {\n  GLIBC: GLIBC,\n  MUSL: MUSL,\n  family: family,\n  version: version,\n  method: method,\n  isNonGlibcLinux: isNonGlibcLinux\n};","map":{"version":3,"names":["platform","require","spawnSync","readdirSync","GLIBC","MUSL","spawnOptions","encoding","env","process","status","stdout","stderr","contains","needle","haystack","indexOf","versionFromMuslLdd","out","split","trim","safeReaddirSync","path","e","family","version","method","glibc","ldd","lib","some","usrSbin","isNonGlibcLinux","module","exports"],"sources":["C:/Users/ACER/node_modules/detect-libc/lib/detect-libc.js"],"sourcesContent":["'use strict';\n\nvar platform = require('os').platform();\nvar spawnSync = require('child_process').spawnSync;\nvar readdirSync = require('fs').readdirSync;\n\nvar GLIBC = 'glibc';\nvar MUSL = 'musl';\n\nvar spawnOptions = {\n  encoding: 'utf8',\n  env: process.env\n};\n\nif (!spawnSync) {\n  spawnSync = function () {\n    return { status: 126, stdout: '', stderr: '' };\n  };\n}\n\nfunction contains (needle) {\n  return function (haystack) {\n    return haystack.indexOf(needle) !== -1;\n  };\n}\n\nfunction versionFromMuslLdd (out) {\n  return out.split(/[\\r\\n]+/)[1].trim().split(/\\s/)[1];\n}\n\nfunction safeReaddirSync (path) {\n  try {\n    return readdirSync(path);\n  } catch (e) {}\n  return [];\n}\n\nvar family = '';\nvar version = '';\nvar method = '';\n\nif (platform === 'linux') {\n  // Try getconf\n  var glibc = spawnSync('getconf', ['GNU_LIBC_VERSION'], spawnOptions);\n  if (glibc.status === 0) {\n    family = GLIBC;\n    version = glibc.stdout.trim().split(' ')[1];\n    method = 'getconf';\n  } else {\n    // Try ldd\n    var ldd = spawnSync('ldd', ['--version'], spawnOptions);\n    if (ldd.status === 0 && ldd.stdout.indexOf(MUSL) !== -1) {\n      family = MUSL;\n      version = versionFromMuslLdd(ldd.stdout);\n      method = 'ldd';\n    } else if (ldd.status === 1 && ldd.stderr.indexOf(MUSL) !== -1) {\n      family = MUSL;\n      version = versionFromMuslLdd(ldd.stderr);\n      method = 'ldd';\n    } else {\n      // Try filesystem (family only)\n      var lib = safeReaddirSync('/lib');\n      if (lib.some(contains('-linux-gnu'))) {\n        family = GLIBC;\n        method = 'filesystem';\n      } else if (lib.some(contains('libc.musl-'))) {\n        family = MUSL;\n        method = 'filesystem';\n      } else if (lib.some(contains('ld-musl-'))) {\n        family = MUSL;\n        method = 'filesystem';\n      } else {\n        var usrSbin = safeReaddirSync('/usr/sbin');\n        if (usrSbin.some(contains('glibc'))) {\n          family = GLIBC;\n          method = 'filesystem';\n        }\n      }\n    }\n  }\n}\n\nvar isNonGlibcLinux = (family !== '' && family !== GLIBC);\n\nmodule.exports = {\n  GLIBC: GLIBC,\n  MUSL: MUSL,\n  family: family,\n  version: version,\n  method: method,\n  isNonGlibcLinux: isNonGlibcLinux\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}